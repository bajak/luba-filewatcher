//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.18046
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Filewatcher.GUI.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Filewatcher.GUI.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Luba Filewatcher ähnelt.
        /// </summary>
        public static string BALLOON_LABEL_HEADER {
            get {
                return ResourceManager.GetString("BALLOON_LABEL_HEADER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Name :  ähnelt.
        /// </summary>
        public static string BALLOON_LABEL_NAME {
            get {
                return ResourceManager.GetString("BALLOON_LABEL_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Source :  ähnelt.
        /// </summary>
        public static string BALLOON_LABEL_TARGET {
            get {
                return ResourceManager.GetString("BALLOON_LABEL_TARGET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Example : ObservedFile.txt ähnelt.
        /// </summary>
        public static string MACRO_LABEL_TEXT_FILENAME {
            get {
                return ResourceManager.GetString("MACRO_LABEL_TEXT_FILENAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Example : ObservedFile ähnelt.
        /// </summary>
        public static string MACRO_LABEL_TEXT_FILENAMENOEXT {
            get {
                return ResourceManager.GetString("MACRO_LABEL_TEXT_FILENAMENOEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Example : C:\Folder1\Folder2\ObservedFile.txt ähnelt.
        /// </summary>
        public static string MACRO_LABEL_TEXT_FILEPATH {
            get {
                return ResourceManager.GetString("MACRO_LABEL_TEXT_FILEPATH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Example : C:\Folder1\Folder2\ObservedFile ähnelt.
        /// </summary>
        public static string MACRO_LABEL_TEXT_FILEPATHNOEXT {
            get {
                return ResourceManager.GetString("MACRO_LABEL_TEXT_FILEPATHNOEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Example : Folder2 ähnelt.
        /// </summary>
        public static string MACRO_LABEL_TEXT_FOLDERNAME {
            get {
                return ResourceManager.GetString("MACRO_LABEL_TEXT_FOLDERNAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Example : C:\Folder1\Folder2 ähnelt.
        /// </summary>
        public static string MACRO_LABEL_TEXT_FOLDERPATH {
            get {
                return ResourceManager.GetString("MACRO_LABEL_TEXT_FOLDERPATH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Variable : $TargetFileName$ ähnelt.
        /// </summary>
        public static string MACRO_LABEL_TITLE_FILENAME {
            get {
                return ResourceManager.GetString("MACRO_LABEL_TITLE_FILENAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Variable : $TargetFileNameNoExt$ ähnelt.
        /// </summary>
        public static string MACRO_LABEL_TITLE_FILENAMENOEXT {
            get {
                return ResourceManager.GetString("MACRO_LABEL_TITLE_FILENAMENOEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Variable : $TargetFilePath$ ähnelt.
        /// </summary>
        public static string MACRO_LABEL_TITLE_FILEPATH {
            get {
                return ResourceManager.GetString("MACRO_LABEL_TITLE_FILEPATH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Variable : $TargetFilePathNoExt$ ähnelt.
        /// </summary>
        public static string MACRO_LABEL_TITLE_FILEPATHNOEXT {
            get {
                return ResourceManager.GetString("MACRO_LABEL_TITLE_FILEPATHNOEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Variable : $TargetFolderName$ ähnelt.
        /// </summary>
        public static string MACRO_LABEL_TITLE_FOLDERNAME {
            get {
                return ResourceManager.GetString("MACRO_LABEL_TITLE_FOLDERNAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Variable : $TargetFolderPath$ ähnelt.
        /// </summary>
        public static string MACRO_LABEL_TITLE_FOLDERPATH {
            get {
                return ResourceManager.GetString("MACRO_LABEL_TITLE_FOLDERPATH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error : folder does not exists ähnelt.
        /// </summary>
        public static string MAIN_ERROR_OUTPUTPATH {
            get {
                return ResourceManager.GetString("MAIN_ERROR_OUTPUTPATH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Icon ähnlich wie (Symbol).
        /// </summary>
        public static System.Drawing.Icon MAIN_IMAGE_NOTIFYICON {
            get {
                object obj = ResourceManager.GetObject("MAIN_IMAGE_NOTIFYICON", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  History  ähnelt.
        /// </summary>
        public static string MAIN_LABEL_HISTORY {
            get {
                return ResourceManager.GetString("MAIN_LABEL_HISTORY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Exit Date ähnelt.
        /// </summary>
        public static string MAIN_LABEL_HISTORY_COLUMN_ENDDATE {
            get {
                return ResourceManager.GetString("MAIN_LABEL_HISTORY_COLUMN_ENDDATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Exit Code ähnelt.
        /// </summary>
        public static string MAIN_LABEL_HISTORY_COLUMN_EXITCODE {
            get {
                return ResourceManager.GetString("MAIN_LABEL_HISTORY_COLUMN_EXITCODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Name ähnelt.
        /// </summary>
        public static string MAIN_LABEL_HISTORY_COLUMN_NAME {
            get {
                return ResourceManager.GetString("MAIN_LABEL_HISTORY_COLUMN_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start Date ähnelt.
        /// </summary>
        public static string MAIN_LABEL_HISTORY_COLUMN_STARTDATE {
            get {
                return ResourceManager.GetString("MAIN_LABEL_HISTORY_COLUMN_STARTDATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Target ähnelt.
        /// </summary>
        public static string MAIN_LABEL_HISTORY_COLUMN_TARGETPATH {
            get {
                return ResourceManager.GetString("MAIN_LABEL_HISTORY_COLUMN_TARGETPATH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete History/s ähnelt.
        /// </summary>
        public static string MAIN_LABEL_HISTORY_DELETE {
            get {
                return ResourceManager.GetString("MAIN_LABEL_HISTORY_DELETE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete All History ähnelt.
        /// </summary>
        public static string MAIN_LABEL_HISTORY_DELETEALL {
            get {
                return ResourceManager.GetString("MAIN_LABEL_HISTORY_DELETEALL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hint : right click to edit history items ähnelt.
        /// </summary>
        public static string MAIN_LABEL_HISTORY_TOOLTIP {
            get {
                return ResourceManager.GetString("MAIN_LABEL_HISTORY_TOOLTIP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  Information  ähnelt.
        /// </summary>
        public static string MAIN_LABEL_INFORMATION {
            get {
                return ResourceManager.GetString("MAIN_LABEL_INFORMATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Luba Filewatcher ähnelt.
        /// </summary>
        public static string MAIN_LABEL_NOTIFYICON {
            get {
                return ResourceManager.GetString("MAIN_LABEL_NOTIFYICON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  Options  ähnelt.
        /// </summary>
        public static string MAIN_LABEL_OPTIONS {
            get {
                return ResourceManager.GetString("MAIN_LABEL_OPTIONS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die     Select File     ähnelt.
        /// </summary>
        public static string MAIN_LABEL_OPTIONS_OUTPUT_SELECTFILE {
            get {
                return ResourceManager.GetString("MAIN_LABEL_OPTIONS_OUTPUT_SELECTFILE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save Histories to database ähnelt.
        /// </summary>
        public static string MAIN_LABEL_OPTIONS_SAVEHISTORIES {
            get {
                return ResourceManager.GetString("MAIN_LABEL_OPTIONS_SAVEHISTORIES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Text Ouput Location :  ähnelt.
        /// </summary>
        public static string MAIN_LABEL_OPTIONS_SAVEOUTPUT {
            get {
                return ResourceManager.GetString("MAIN_LABEL_OPTIONS_SAVEOUTPUT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show information popups ähnelt.
        /// </summary>
        public static string MAIN_LABEL_OPTIONS_SHOWPOPUPS {
            get {
                return ResourceManager.GetString("MAIN_LABEL_OPTIONS_SHOWPOPUPS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  Output  ähnelt.
        /// </summary>
        public static string MAIN_LABEL_OUTPUT {
            get {
                return ResourceManager.GetString("MAIN_LABEL_OUTPUT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Clear Output ähnelt.
        /// </summary>
        public static string MAIN_LABEL_OUTPUT_CLEAROUTPUT {
            get {
                return ResourceManager.GetString("MAIN_LABEL_OUTPUT_CLEAROUTPUT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die    Watch    ähnelt.
        /// </summary>
        public static string MAIN_LABEL_WATCH {
            get {
                return ResourceManager.GetString("MAIN_LABEL_WATCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add Watch ähnelt.
        /// </summary>
        public static string MAIN_LABEL_WATCH_ADDITEM {
            get {
                return ResourceManager.GetString("MAIN_LABEL_WATCH_ADDITEM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Process ähnelt.
        /// </summary>
        public static string MAIN_LABEL_WATCH_COLUMN_EXECUTABLE {
            get {
                return ResourceManager.GetString("MAIN_LABEL_WATCH_COLUMN_EXECUTABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ext ähnelt.
        /// </summary>
        public static string MAIN_LABEL_WATCH_COLUMN_EXTENSION {
            get {
                return ResourceManager.GetString("MAIN_LABEL_WATCH_COLUMN_EXTENSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Filter ähnelt.
        /// </summary>
        public static string MAIN_LABEL_WATCH_COLUMN_FILTER {
            get {
                return ResourceManager.GetString("MAIN_LABEL_WATCH_COLUMN_FILTER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Folder ähnelt.
        /// </summary>
        public static string MAIN_LABEL_WATCH_COLUMN_FOLDER {
            get {
                return ResourceManager.GetString("MAIN_LABEL_WATCH_COLUMN_FOLDER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Name ähnelt.
        /// </summary>
        public static string MAIN_LABEL_WATCH_COLUMN_NAME {
            get {
                return ResourceManager.GetString("MAIN_LABEL_WATCH_COLUMN_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parameter ähnelt.
        /// </summary>
        public static string MAIN_LABEL_WATCH_COLUMN_PARAMETER {
            get {
                return ResourceManager.GetString("MAIN_LABEL_WATCH_COLUMN_PARAMETER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Watch ähnelt.
        /// </summary>
        public static string MAIN_LABEL_WATCH_COLUMN_Watch {
            get {
                return ResourceManager.GetString("MAIN_LABEL_WATCH_COLUMN_Watch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete Watch/s ähnelt.
        /// </summary>
        public static string MAIN_LABEL_WATCH_DELETEITEMS {
            get {
                return ResourceManager.GetString("MAIN_LABEL_WATCH_DELETEITEMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disable Watch ähnelt.
        /// </summary>
        public static string MAIN_LABEL_WATCH_DISABLED {
            get {
                return ResourceManager.GetString("MAIN_LABEL_WATCH_DISABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Edit Action ähnelt.
        /// </summary>
        public static string MAIN_LABEL_WATCH_EDITITEM {
            get {
                return ResourceManager.GetString("MAIN_LABEL_WATCH_EDITITEM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enable Action ähnelt.
        /// </summary>
        public static string MAIN_LABEL_WATCH_ENABLED {
            get {
                return ResourceManager.GetString("MAIN_LABEL_WATCH_ENABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hint : right click to add or edit watch items ähnelt.
        /// </summary>
        public static string MAIN_LABEL_WATCH_TOOLTIP {
            get {
                return ResourceManager.GetString("MAIN_LABEL_WATCH_TOOLTIP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Text Files ähnelt.
        /// </summary>
        public static string MAIN_OPTIONS_OUTPUT_TEXTFILES {
            get {
                return ResourceManager.GetString("MAIN_OPTIONS_OUTPUT_TEXTFILES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  Seconds left... ähnelt.
        /// </summary>
        public static string SPLASH_LABEL_TIMELEFT {
            get {
                return ResourceManager.GetString("SPLASH_LABEL_TIMELEFT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The &quot;Output Filepath&quot; option is enabled. The process output will not shown. ähnelt.
        /// </summary>
        public static string WARNINGMESSAGE_TEXT_OUTPUTPATH {
            get {
                return ResourceManager.GetString("WARNINGMESSAGE_TEXT_OUTPUTPATH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The &quot;Shell Execute&quot; option is enabled. The process output can not be redirected. ähnelt.
        /// </summary>
        public static string WARNINGMESSAGE_TEXT_SHELLEXECUTE {
            get {
                return ResourceManager.GetString("WARNINGMESSAGE_TEXT_SHELLEXECUTE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Warning ähnelt.
        /// </summary>
        public static string WARNINGMESSAGE_TITLE {
            get {
                return ResourceManager.GetString("WARNINGMESSAGE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Default Name ähnelt.
        /// </summary>
        public static string WATCH_DEFAULT_NAME {
            get {
                return ResourceManager.GetString("WATCH_DEFAULT_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /T:C0 /K Echo File access on &apos;$TargetFilePath$&apos; ähnelt.
        /// </summary>
        public static string WATCH_DEFAULT_PARAMETER {
            get {
                return ResourceManager.GetString("WATCH_DEFAULT_PARAMETER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error : invalid regular expression ähnelt.
        /// </summary>
        public static string WATCH_ERROR_EXCLUDEEXTENSION {
            get {
                return ResourceManager.GetString("WATCH_ERROR_EXCLUDEEXTENSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error : value must contain a &apos;.&apos; character ähnelt.
        /// </summary>
        public static string WATCH_ERROR_EXTENSION {
            get {
                return ResourceManager.GetString("WATCH_ERROR_EXTENSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error : a option must be checked ähnelt.
        /// </summary>
        public static string WATCH_ERROR_FILTER {
            get {
                return ResourceManager.GetString("WATCH_ERROR_FILTER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error : folder does not exists ähnelt.
        /// </summary>
        public static string WATCH_ERROR_FOLDER {
            get {
                return ResourceManager.GetString("WATCH_ERROR_FOLDER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error : value cannot contain not ascii ähnelt.
        /// </summary>
        public static string WATCH_ERROR_NAME_ASCII {
            get {
                return ResourceManager.GetString("WATCH_ERROR_NAME_ASCII", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error : value cannot be empty ähnelt.
        /// </summary>
        public static string WATCH_ERROR_NAME_EMPTY {
            get {
                return ResourceManager.GetString("WATCH_ERROR_NAME_EMPTY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error : should be empty or a valid filepath ähnelt.
        /// </summary>
        public static string WATCH_ERROR_OUTPUTPATH {
            get {
                return ResourceManager.GetString("WATCH_ERROR_OUTPUTPATH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error : file does not exists ähnelt.
        /// </summary>
        public static string WATCH_ERROR_PROCESS {
            get {
                return ResourceManager.GetString("WATCH_ERROR_PROCESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All Files ähnelt.
        /// </summary>
        public static string WATCH_GENERIC_ALLFILES {
            get {
                return ResourceManager.GetString("WATCH_GENERIC_ALLFILES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cancel ähnelt.
        /// </summary>
        public static string WATCH_LABEL_CANCEL {
            get {
                return ResourceManager.GetString("WATCH_LABEL_CANCEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Exclude Regex  :  ähnelt.
        /// </summary>
        public static string WATCH_LABEL_EXCLUDEEXTENSION {
            get {
                return ResourceManager.GetString("WATCH_LABEL_EXCLUDEEXTENSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Filename Change ähnelt.
        /// </summary>
        public static string WATCH_LABEL_FILECHANGE {
            get {
                return ResourceManager.GetString("WATCH_LABEL_FILECHANGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die File Filters :   ähnelt.
        /// </summary>
        public static string WATCH_LABEL_FILTER {
            get {
                return ResourceManager.GetString("WATCH_LABEL_FILTER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Foldername Change ähnelt.
        /// </summary>
        public static string WATCH_LABEL_FOLDERCHANGE {
            get {
                return ResourceManager.GetString("WATCH_LABEL_FOLDERCHANGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Include Extension :  ähnelt.
        /// </summary>
        public static string WATCH_LABEL_INCLUDEEXTENSION {
            get {
                return ResourceManager.GetString("WATCH_LABEL_INCLUDEEXTENSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Include Subfolders ähnelt.
        /// </summary>
        public static string WATCH_LABEL_INCLUDESUBFOLDER {
            get {
                return ResourceManager.GetString("WATCH_LABEL_INCLUDESUBFOLDER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Last Access ähnelt.
        /// </summary>
        public static string WATCH_LABEL_LASTACCESS {
            get {
                return ResourceManager.GetString("WATCH_LABEL_LASTACCESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Last Write ähnelt.
        /// </summary>
        public static string WATCH_LABEL_LASTWRITE {
            get {
                return ResourceManager.GetString("WATCH_LABEL_LASTWRITE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Log Output ähnelt.
        /// </summary>
        public static string WATCH_LABEL_LOGOUTPUT {
            get {
                return ResourceManager.GetString("WATCH_LABEL_LOGOUTPUT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  Macro  ähnelt.
        /// </summary>
        public static string WATCH_LABEL_MACRO {
            get {
                return ResourceManager.GetString("WATCH_LABEL_MACRO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Name : ähnelt.
        /// </summary>
        public static string WATCH_LABEL_NAME {
            get {
                return ResourceManager.GetString("WATCH_LABEL_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Other :   ähnelt.
        /// </summary>
        public static string WATCH_LABEL_OTHER {
            get {
                return ResourceManager.GetString("WATCH_LABEL_OTHER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Output Filepath :  ähnelt.
        /// </summary>
        public static string WATCH_LABEL_OUTPUTPATH {
            get {
                return ResourceManager.GetString("WATCH_LABEL_OUTPUTPATH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parameter : ähnelt.
        /// </summary>
        public static string WATCH_LABEL_PARAMETER {
            get {
                return ResourceManager.GetString("WATCH_LABEL_PARAMETER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Process Filepath : ähnelt.
        /// </summary>
        public static string WATCH_LABEL_PROCESS {
            get {
                return ResourceManager.GetString("WATCH_LABEL_PROCESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Process Hidden ähnelt.
        /// </summary>
        public static string WATCH_LABEL_PROCESSHIDDEN {
            get {
                return ResourceManager.GetString("WATCH_LABEL_PROCESSHIDDEN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save ähnelt.
        /// </summary>
        public static string WATCH_LABEL_SAVE {
            get {
                return ResourceManager.GetString("WATCH_LABEL_SAVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  Select File  ähnelt.
        /// </summary>
        public static string WATCH_LABEL_SELECTFILE {
            get {
                return ResourceManager.GetString("WATCH_LABEL_SELECTFILE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  Select Folder  ähnelt.
        /// </summary>
        public static string WATCH_LABEL_SELECTFOLDER {
            get {
                return ResourceManager.GetString("WATCH_LABEL_SELECTFOLDER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Shell Execute ähnelt.
        /// </summary>
        public static string WATCH_LABEL_USESHELLEXECUTE {
            get {
                return ResourceManager.GetString("WATCH_LABEL_USESHELLEXECUTE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Watch :   ähnelt.
        /// </summary>
        public static string WATCH_LABEL_WATCH {
            get {
                return ResourceManager.GetString("WATCH_LABEL_WATCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Watch Folder : ähnelt.
        /// </summary>
        public static string WATCH_LABEL_WATCHFOLDER {
            get {
                return ResourceManager.GetString("WATCH_LABEL_WATCHFOLDER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Working Folder :  ähnelt.
        /// </summary>
        public static string WATCH_LABEL_WORKINGFOLDER {
            get {
                return ResourceManager.GetString("WATCH_LABEL_WORKINGFOLDER", resourceCulture);
            }
        }
    }
}
